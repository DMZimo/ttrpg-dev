---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import AtlasViewer from "@/components/atlas/AtlasViewer.tsx";

// Import available maps
import dessarinValleyMap from "@/assets/maps/dessarin-valley-map.webp";
import redLarchAreaMap from "@/assets/maps/red-larch-area.webp";
import redLarchMap from "@/assets/maps/red-larch-map.webp";
import swordCoastMap from "@/assets/maps/sword-coast- map.webp";

// Get all atlas collections
const [continents, regions, settlements] = await Promise.all([
  getCollection("continents"),
  getCollection("regions"),
  getCollection("settlements"),
]);

// Create map definitions with metadata
const availableMaps = [
  {
    id: "sword-coast",
    name: "Sword Coast",
    description:
      "The western coast of FaerÃ»n, home to many great cities and adventures",
    image: swordCoastMap,
    type: "continent",
    scale: "regional",
    bounds: {
      north: 50,
      south: 30,
      east: 20,
      west: -20,
    },
  },
  {
    id: "dessarin-valley",
    name: "Dessarin Valley",
    description:
      "A fertile valley in the North, site of our current adventures",
    image: dessarinValleyMap,
    type: "region",
    scale: "local",
    parentMap: "sword-coast",
    bounds: {
      north: 45,
      south: 40,
      east: 5,
      west: -5,
    },
  },
  {
    id: "red-larch-area",
    name: "Red Larch Area",
    description:
      "The surrounding countryside and local settlements near Red Larch",
    image: redLarchAreaMap,
    type: "area",
    scale: "local",
    parentMap: "dessarin-valley",
    bounds: {
      north: 42.5,
      south: 42,
      east: 1,
      west: -1,
    },
  },
  {
    id: "red-larch",
    name: "Red Larch",
    description: "Detailed map of the town of Red Larch and its districts",
    image: redLarchMap,
    type: "settlement",
    scale: "detailed",
    parentMap: "red-larch-area",
    bounds: {
      north: 42.25,
      south: 42.15,
      east: 0.1,
      west: -0.1,
    },
  },
];

// Process locations data for the atlas viewer
const processedLocations = [
  ...continents.map((continent) => ({
    id: continent.id,
    name: continent.data.name,
    type: "continent",
    category: "continent",
    description: continent.body,
    data: continent.data,
    coordinates: { lat: 40, lng: 0 }, // Default coordinates, can be customized
    mapId: "sword-coast", // Default map for continents
  })),
  ...regions.map((region) => ({
    id: region.id,
    name: region.data.name,
    type: region.data.type,
    category: "region",
    description: region.body,
    data: region.data,
    coordinates: { lat: 42, lng: 0 }, // Default coordinates
    mapId:
      region.data.parent_continent === "faerun"
        ? "dessarin-valley"
        : "sword-coast",
  })),
  ...settlements.map((settlement) => ({
    id: settlement.id,
    name: settlement.data.name,
    type: settlement.data.type,
    category: "settlement",
    description: settlement.body,
    data: settlement.data,
    coordinates: {
      lat: settlement.data.name === "Red Larch" ? 42.2 : 42,
      lng: settlement.data.name === "Red Larch" ? 0 : 0,
    },
    mapId:
      settlement.data.name === "Red Larch" ? "red-larch" : "dessarin-valley",
  })),
];

// Get campaign statistics
const totalLocations = processedLocations.length;
const locationsByType = processedLocations.reduce(
  (acc, location) => {
    acc[location.category] = (acc[location.category] || 0) + 1;
    return acc;
  },
  {} as Record<string, number>
);

const pageTitle = "World Atlas";
const pageDescription =
  "Explore the world of our campaign through detailed maps and location guides.";
---

<BaseLayout title={pageTitle} description={pageDescription} class="!pt-0">
  <AtlasViewer
    maps={availableMaps}
    locations={processedLocations}
    defaultMapId="dessarin-valley"
    client:load
  />
</BaseLayout>
