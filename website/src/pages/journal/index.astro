---
import BaseLayout from "@/layouts/BaseLayout.astro";
import JournalHeader from "@/components/journal/JournalHeader.astro";
import JournalNavigation from "@/components/journal/JournalNavigation.astro";
import JournalFilters from "@/components/journal/JournalFilters.astro";
import SessionCard from "@/components/journal/SessionCard.astro";
import { getCollection } from "astro:content";

const entries = (await getCollection("journal")).sort((a, b) => {
  // Use session_date if available, otherwise fall back to pubDate
  const dateA = a.data.session_date || a.data.pubDate;
  const dateB = b.data.session_date || b.data.pubDate;

  // Handle cases where dates might be undefined
  if (!dateA && !dateB) return 0;
  if (!dateA) return 1;
  if (!dateB) return -1;

  return dateB.valueOf() - dateA.valueOf();
});

// Calculate statistics for the header
const totalSessions = entries.length;
const allTags = new Set<string>();
entries.forEach((entry) => {
  if (entry.data.tags) {
    entry.data.tags.forEach((tag: string) => allTags.add(tag));
  }
});

const latestSessionDate =
  entries.length > 0
    ? entries[0].data.session_date || entries[0].data.pubDate
    : undefined;
const oldestSessionDate =
  entries.length > 0
    ? entries[entries.length - 1].data.session_date ||
      entries[entries.length - 1].data.pubDate
    : undefined;
---

<BaseLayout
  title="Game Sessions - TTRPG Journal"
  description="Browse all tabletop RPG game sessions and campaign notes"
>
  <JournalNavigation />

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <JournalHeader
      totalSessions={totalSessions}
      totalTags={allTags.size}
      latestSessionDate={latestSessionDate}
      oldestSessionDate={oldestSessionDate}
    />

    <JournalFilters />

    {
      entries.length === 0 ? (
        <div class="text-center py-16">
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-12">
            <svg
              class="mx-auto h-24 w-24 text-gray-400 mb-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="1"
                d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
              />
            </svg>
            <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2">
              No Sessions Yet
            </h3>
            <p class="text-gray-600 dark:text-gray-400 mb-6">
              Start documenting your tabletop RPG adventures!
            </p>
            <a
              href="/sessions/new"
              class="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors"
            >
              <svg
                class="w-5 h-5 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4v16m8-8H4"
                />
              </svg>
              Create Your First Session
            </a>
          </div>
        </div>
      ) : (
        <div
          id="session-grid"
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
        >
          {entries.map((entry, index) => {
            // Add data attributes for filtering
            const displayDate = entry.data.session_date || entry.data.pubDate;
            const dateString = displayDate ? displayDate.toISOString() : "";

            return (
              <div
                data-date={dateString}
                data-tags={entry.data.tags?.join(",") || ""}
              >
                <SessionCard
                  entry={entry}
                  featured={index === 0 && entries.length > 1}
                />
              </div>
            );
          })}
        </div>
      )
    }
  </div>
</BaseLayout>
