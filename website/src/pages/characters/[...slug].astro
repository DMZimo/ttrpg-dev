---
import { getCollection, type CollectionEntry, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
// Import only what we need from character components
import CharacterHeader from "@/components/characters/slug/CharacterHeader.astro";
import CharacterSkills from "@/components/characters/slug/CharacterSkills.astro";
import CharacterPhysical from "@/components/characters/slug/CharacterPhysical.astro";
import CharacterTrait from "@/components/characters/slug/CharacterTrait.astro";

export async function getStaticPaths() {
  const characters = await getCollection("characters");
  return characters.map((character) => ({
    params: { slug: character.id },
    props: { character },
  }));
}

type Props = {
  character: CollectionEntry<"characters">;
};

const { character } = Astro.props;
const { Content } = await render(character);
const characterColor = character.data.color || "var(--hero-red)";
---

<BaseLayout
  title={`${character.data.name} - Dessarin Valley Chronicles`}
  description={character.data.description ||
    `Character profile for ${character.data.name}`}
>
  <div class="flex pt-11">
    <!-- Left Sidebar - Navigation and Character Stats -->
    <div class="flex-col bg-surface-secondary pl-2">
      <div class="mb-43">
        <CharacterHeader character={character} />
      </div>
      <div class="flex flex-col gap-2 px-2">
        <CharacterPhysical character={character} />
        <CharacterSkills character={character} />
      </div>
    </div>
    <div>
      <div
        class="p-4 border-0 border-b-2 border-hero-red sharp-corners shadow-md bg-gradient-to-br from-[rgba(28,28,39,0.95)] to-[rgba(39,39,55,0.9)] bg-[length:cover,256px_256px]"
        style={`--character-accent: rgb(${character.data.color || "var(--hero-red)"}); background-image: linear-gradient(135deg, rgba(28,28,39,0.95) 0%, rgba(39,39,55,0.9) 100%), var(--texture-noise);`}
        role="region"
        aria-label="Character personality overview"
      >
        <div class="flex flex-col md:flex-row">
          <div class="flex-none flex flex-col gap-2">
            {/* Enhanced personality traits display */}
            {
              character.data.personality_traits &&
                character.data.personality_traits.length > 0 && (
                  <div class="relative group">
                    <blockquote class="italic text-text-secondary pl-3 border-l-2 border-hero-red max-w-md text-sm">
                      <p>"{character.data.personality_traits[0]}"</p>
                    </blockquote>

                    {character.data.personality_traits.length > 1 && (
                      <>
                        <div class="mt-2 text-xs text-text-secondary opacity-70">
                          +{character.data.personality_traits.length - 1} more
                          trait
                          {character.data.personality_traits.length > 2
                            ? "s"
                            : ""}
                        </div>
                        <div class="absolute top-full left-0 z-10 bg-surface-secondary p-3 border border-border-secondary shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 w-full max-w-md">
                          <h4 class="text-xs font-bold uppercase mb-2 text-hero-red">
                            All Personality Traits
                          </h4>
                          <ul class="space-y-2">
                            {character.data.personality_traits.map(
                              (trait: string) => (
                                <li class="italic text-text-secondary text-sm">
                                  "{trait}"
                                </li>
                              )
                            )}
                          </ul>
                        </div>
                      </>
                    )}
                  </div>
                )
            }
          </div>
          <div class="flex-1 md:ml-6 mt-4 md:mt-0">
            {
              (character.data.ideals ||
                character.data.bonds ||
                character.data.flaws) && (
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3">
                  {character.data.ideals &&
                    character.data.ideals.length > 0 && (
                      <CharacterTrait
                        title="Ideals"
                        items={character.data.ideals}
                        color="text-hero-red"
                        colorVar="var(--hero-red)"
                      />
                    )}
                  {character.data.bonds && character.data.bonds.length > 0 && (
                    <CharacterTrait
                      title="Bonds"
                      items={character.data.bonds}
                      color="text-gold-400"
                      colorVar="var(--gold-400)"
                    />
                  )}
                  {character.data.flaws && character.data.flaws.length > 0 && (
                    <CharacterTrait
                      title="Flaws"
                      items={character.data.flaws}
                      color="text-accent-400"
                      colorVar="var(--accent-400)"
                    />
                  )}
                </div>
              )
            }
          </div>
        </div>
      </div>

      <!-- Character Background -->
      {
        character.data.background && (
          <div class="mt-8 pt-6 border-t border-border-primary">
            <h2
              class="text-2xl font-bold mb-4"
              style={`color: ${characterColor}`}
            >
              Background
            </h2>
            <div class="bg-surface-secondary p-5 border border-border-secondary">
              <h3 class="text-lg font-semibold mb-3">
                {character.data.background}
              </h3>
            </div>
          </div>
        )
      }

      <!-- Character Traits & Connections -->
      <div class="mt-8 pt-6 border-t border-border-primary">
        {/* Character Connections */}
        {
          (character.data.allies || character.data.enemies) && (
            <div role="region" aria-labelledby="connections-heading">
              <h2
                id="connections-heading"
                class="text-2xl font-bold mb-4"
                style={`color: ${characterColor}`}
              >
                Connections
              </h2>

              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {character.data.allies && character.data.allies.length > 0 && (
                  <div class="bg-surface-secondary p-4 border border-border-secondary hover:border-hero-red transition-colors duration-200">
                    <h3 class="text-lg font-semibold mb-2 flex items-center gap-2">
                      <span class="text-green-400">⚔</span>
                      Allies
                    </h3>
                    <ul class="list-disc pl-5 space-y-1">
                      {character.data.allies.map((ally: string) => (
                        <li class="text-text-secondary">{ally}</li>
                      ))}
                    </ul>
                  </div>
                )}

                {character.data.enemies &&
                  character.data.enemies.length > 0 && (
                    <div class="bg-surface-secondary p-4 border border-border-secondary hover:border-red-500 transition-colors duration-200">
                      <h3 class="text-lg font-semibold mb-2 flex items-center gap-2">
                        <span class="text-red-400">⚡</span>
                        Enemies
                      </h3>
                      <ul class="list-disc pl-5 space-y-1">
                        {character.data.enemies.map((enemy: string) => (
                          <li class="text-text-secondary">{enemy}</li>
                        ))}
                      </ul>
                    </div>
                  )}
              </div>
            </div>
          )
        }
      </div>
      <!-- Main Biography Content -->
      <div role="region" aria-labelledby="biography-heading">
        <h2 id="biography-heading" class="sr-only">Character Biography</h2>
        <!-- Biography Text Content -->
        <div class="prose max-w-none">
          <Content />
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
