---
import BaseLayout from "@/layouts/BaseLayout.astro";
import CharactersPage from "@/components/characters/CharactersPage";
import { getCollection } from "astro:content";

// Get all character entries
const allCharacters = await getCollection("characters");

// Filter only public characters or add all if none are public
const publicCharacters = allCharacters.filter(
  (char) => char.data.is_public || char.data.isPublic
);
const charactersToShow =
  publicCharacters.length > 0 ? publicCharacters : allCharacters;

// Convert the character data to match the React component interface
const characterData = charactersToShow.map((char) => ({
  id: char.id,
  data: {
    // Character Metadata
    owner: char.data.owner,
    is_public: char.data.is_public,
    publish_date_iso: char.data.publish_date_iso,
    last_updated_iso: char.data.last_updated_iso,
    tags: char.data.tags,

    // Character Details
    type: char.data.type,
    status: char.data.status,
    active: char.data.active,
    portrait: char.data.portrait,
    token: char.data.token,
    color: char.data.color,

    // Character Attributes
    name: char.data.name,
    race: char.data.race,
    subrace: char.data.subrace,
    background: char.data.background,
    birthplace: char.data.birthplace,
    description: char.data.description,
    birthdate: char.data.birthdate,
    size: char.data.size,
    languages: char.data.languages,

    // Character Roles
    roles: char.data.roles || [],

    // Character Stats
    ability_scores: char.data.ability_scores,

    // Derived stats
    proficiency_bonus: char.data.proficiency_bonus,
    saving_throws: char.data.saving_throws,

    // Classes and levels
    classes: char.data.classes || char.data.class || [],
    hp: char.data.hp,
    ac: char.data.ac,

    // Skills
    skills: char.data.skills,
    other_skills: char.data.other_skills,

    // Spellcasting
    spellcasting: char.data.spellcasting,

    // Character Relationships
    organization: char.data.organization,
    enclave: char.data.enclave,
    affiliations: char.data.affiliations,
    cult: char.data.cult,
    allies: char.data.allies,
    enemies: char.data.enemies,

    // Character motivations and traits
    personality_traits: char.data.personality_traits,
    ideals: char.data.ideals,
    bonds: char.data.bonds,
    flaws: char.data.flaws,

    // Legacy fields (keeping for backward compatibility)
    publishDate: char.data.publishDate,
    lastUpdated: char.data.last_updated_iso || char.data.lastUpdated,
    isPublic: char.data.is_public || char.data.isPublic,
    class: char.data.classes || char.data.class || [],
  },
}));
---

<BaseLayout
  title="Characters - Dessarin Valley Chronicles"
  description="Meet the adventurers, allies, and adversaries of the Dessarin Valley campaign"
>
  <CharactersPage characters={characterData as any} client:load />
</BaseLayout>
