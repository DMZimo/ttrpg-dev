---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import FormattedDate from "@/components/layout/FormattedDate.astro";
import HoloCard from "@/components/ui/HoloCard.astro";
import { Image } from "astro:assets";

type Props = CollectionEntry<"journal">["data"];

const {
  title,
  description,
  session_title,
  session_number,
  session_start,
  session_date,
  duration,
  characters_involved,
  npcs_encountered,
  previous_session,
  next_session,
  tags,
  pubDate,
  updatedDate,
  heroImage,
  cover_image,
} = Astro.props;

// Use session_title if available, otherwise fall back to title
const displayTitle =
  session_title || title || `Session ${session_number || ""}`;
const displayDate = session_start || session_date || pubDate;

// Extract additional props for expanded metadata
const {
  session_length_hours,
  primary_location,
  locations_visited,
  weather,
  time_of_day,
  season,
  combat_encounters,
  main_events,
  loot_gained,
  currency_gained,
  experience_gained,
  level_ups,
} = Astro.props;
---

<BaseLayout
  title={displayTitle}
  description={description || ""}
  image={heroImage}
  class="max-w-none"
>
  <article class="py-6">
    {
      (cover_image || heroImage) && (
        <div class="hero-image mb-6 w-full">
          <HoloCard
            backgroundImage={(cover_image || heroImage)!.src}
            backgroundOpacity={0.7}
            class="relative overflow-hidden w-full"
          >
            <div class="relative h-64 md:h-80">
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent" />
              
              <!-- Header content overlay -->
              <div class="absolute inset-0 flex flex-col justify-end p-4 md:p-6">
                <header class="text-center text-white">
                  {
                    session_number && (
                      <div class="session-number text-xs font-bold text-white mb-1 px-2 py-0.5 bg-black/40 backdrop-blur-sm rounded-full inline-block border border-white/20">
                        Session {session_number}
                      </div>
                    )
                  }
                  <h1 class="title text-2xl md:text-4xl font-bold text-white mb-3 leading-tight drop-shadow-lg">
                    {displayTitle}
                  </h1>
                  <div class="flex items-center justify-center gap-4 text-sm text-white/90 mb-3">
                    {
                      displayDate && (
                        <div class="date drop-shadow">
                          <FormattedDate date={displayDate} />
                        </div>
                      )
                    }
                    {
                      session_length_hours && (
                        <div class="duration drop-shadow">
                          {session_length_hours}h session
                        </div>
                      )
                    }
                    {
                      updatedDate && (
                        <div class="last-updated-on text-white/70 drop-shadow">
                          Updated: <FormattedDate date={updatedDate} />
                        </div>
                      )
                    }
                  </div>
                  
                  <!-- Session Metadata Overlay -->
                  {
                    (characters_involved || npcs_encountered || tags || locations_visited || combat_encounters || main_events) && (
                      <div class="session-metadata bg-black/30 backdrop-blur-sm rounded-lg p-3 mt-3 not-prose border border-white/20">
                        <div class="space-y-2 text-xs">
                          
                          <!-- First Row: Characters, NPCs, and Location -->
                          <div class="flex flex-wrap items-start gap-4">
                            {characters_involved && characters_involved.length > 0 && (
                              <div class="characters flex items-center gap-1">
                                <span class="text-sm">üë•</span>
                                <div class="flex flex-wrap items-center gap-1">
                                  {characters_involved.map((character, index) => (
                                    <span class="text-white/90">
                                      {typeof character === "string" ? (
                                        character.replace(/\[\[|\]\]/g, "")
                                      ) : (
                                        <a
                                          href={
                                            character.link ||
                                            `/characters/${character.name.toLowerCase().replace(/\s+/g, "-")}`
                                          }
                                          class="text-accent-300 hover:text-accent-100 hover:underline transition-colors"
                                        >
                                          {character.name}
                                        </a>
                                      )}
                                      {index < characters_involved.length - 1 && <span class="text-white/60">,</span>}
                                    </span>
                                  ))}
                                </div>
                              </div>
                            )}

                            {primary_location && (
                              <div class="location flex items-center gap-1">
                                <span class="text-sm">üìç</span>
                                <span class="text-white/90">{primary_location}</span>
                              </div>
                            )}

                            {weather && (
                              <div class="weather flex items-center gap-1">
                                <span class="text-sm">üå¶Ô∏è</span>
                                <span class="text-white/90">{weather}</span>
                              </div>
                            )}
                          </div>

                          <!-- Second Row: NPCs -->
                          {npcs_encountered && npcs_encountered.length > 0 && (
                            <div class="npcs flex items-center gap-1">
                              <span class="text-sm">üèòÔ∏è</span>
                              <div class="flex flex-wrap items-center gap-1">
                                {npcs_encountered.map((npc, index) => (
                                  <span class="text-white/90">
                                    {typeof npc === "string" ? (
                                      npc.replace(/\[\[|\]\]/g, "")
                                    ) : (
                                      <a
                                        href={
                                          npc.link ||
                                          `/npcs/${npc.name.toLowerCase().replace(/\s+/g, "-")}`
                                        }
                                        class="text-gold-300 hover:text-gold-100 hover:underline transition-colors"
                                      >
                                        {npc.name}
                                      </a>
                                    )}
                                    {index < npcs_encountered.length - 1 && <span class="text-white/60">,</span>}
                                  </span>
                                ))}
                              </div>
                            </div>
                          )}

                          <!-- Third Row: Combat, Experience, and Loot -->
                          <div class="flex flex-wrap items-start gap-4">
                            {combat_encounters && combat_encounters.length > 0 && (
                              <div class="combat flex items-center gap-1">
                                <span class="text-sm">‚öîÔ∏è</span>
                                <span class="text-white/90">{combat_encounters.length} combat{combat_encounters.length > 1 ? 's' : ''}</span>
                              </div>
                            )}

                            {experience_gained && (
                              <div class="experience flex items-center gap-1">
                                <span class="text-sm">‚≠ê</span>
                                <span class="text-white/90">{experience_gained} XP</span>
                              </div>
                            )}

                            {level_ups && level_ups.length > 0 && (
                              <div class="level-up flex items-center gap-1">
                                <span class="text-sm">üìà</span>
                                <span class="text-accent-300">Level Up!</span>
                              </div>
                            )}

                            {(currency_gained || loot_gained) && (
                              <div class="loot flex items-center gap-1">
                                <span class="text-sm">üí∞</span>
                                <span class="text-gold-300">
                                  {currency_gained && `${currency_gained.gold || 0}g`}
                                  {loot_gained && ` + ${loot_gained.length} item${loot_gained.length > 1 ? 's' : ''}`}
                                </span>
                              </div>
                            )}
                          </div>

                          <!-- Fourth Row: Tags -->
                          {tags && tags.length > 0 && (
                            <div class="tags flex items-center gap-1">
                              <span class="text-sm">üè∑Ô∏è</span>
                              <div class="flex flex-wrap gap-1">
                                {tags.map((tag) => (
                                  <span class="tag px-1.5 py-0.5 text-xs font-medium rounded border border-white/30 bg-white/10 text-white/90">
                                    {tag}
                                  </span>
                                ))}
                              </div>
                            </div>
                          )}

                        </div>
                      </div>
                    )
                  }
                </header>
              </div>
            </div>
          </HoloCard>
        </div>
      )
    }

    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="prose prose-lg max-w-none mx-auto">

      <!-- Session Content -->
      <div class="prose prose-xl max-w-none text-secondary">
        <slot />
      </div>

      <!-- Session Navigation -->
      {
        (previous_session || next_session) && (
          <div class="session-navigation mt-16 pt-12 border-t border-primary">
            <div class="nav-links grid grid-cols-1 md:grid-cols-2 gap-6">
              {previous_session && (
                <HoloCard
                  backgroundImage="/images/nav-bg-prev.jpg"
                  backgroundOpacity={0.2}
                  class="rounded-xl overflow-hidden border border-primary hover:border-accent-400 transition-colors"
                >
                  <a
                    href={`/journal/${previous_session
                      .replace(/\[\[|\]\]/g, "")
                      .toLowerCase()
                      .replace(/\s+/g, "-")}`}
                    class="prev-session group block p-6 h-full"
                  >
                    <div class="flex items-center gap-3 h-full">
                      <svg
                        class="w-8 h-8 text-secondary group-hover:text-accent-400 group-hover:-translate-x-1 transition-all flex-shrink-0"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                          clip-rule="evenodd"
                        />
                      </svg>
                      <div class="min-w-0">
                        <div class="font-semibold text-primary group-hover:text-accent-400 transition-colors">Previous Session</div>
                        <div class="text-sm text-secondary truncate">
                          {previous_session.replace(/\[\[|\]\]/g, "")}
                        </div>
                      </div>
                    </div>
                  </a>
                </HoloCard>
              )}

              {next_session && (
                <HoloCard
                  backgroundImage="/images/nav-bg-next.jpg"
                  backgroundOpacity={0.2}
                  class="rounded-xl overflow-hidden border border-primary hover:border-accent-400 transition-colors"
                >
                  <a
                    href={`/journal/${next_session
                      .replace(/\[\[|\]\]/g, "")
                      .toLowerCase()
                      .replace(/\s+/g, "-")}`}
                    class="next-session group block p-6 h-full"
                  >
                    <div class="flex items-center gap-3 h-full justify-end text-right">
                      <div class="min-w-0">
                        <div class="font-semibold text-primary group-hover:text-accent-400 transition-colors">Next Session</div>
                        <div class="text-sm text-secondary truncate">
                          {next_session.replace(/\[\[|\]\]/g, "")}
                        </div>
                      </div>
                      <svg
                        class="w-8 h-8 text-secondary group-hover:text-accent-400 group-hover:translate-x-1 transition-all flex-shrink-0"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </div>
                  </a>
                </HoloCard>
              )}
            </div>
          </div>
        )
      }
      </div>
    </div>
  </article>
</BaseLayout>
