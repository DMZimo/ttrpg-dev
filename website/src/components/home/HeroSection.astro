---
import { getCollection } from "astro:content";
import { HeroButton } from "../ui/HeroButton.tsx";

// Import assets
import blogPlaceholder1 from "../../assets/blog-placeholder-1.jpg";
import blogPlaceholder1Holo from "../../assets/blog-placeholder-1-holo.jpg";
import blogPlaceholder2 from "../../assets/blog-placeholder-2.jpg";
import blogPlaceholder2Holo from "../../assets/blog-placeholder-2-holo.jpg";
import blogPlaceholder3 from "../../assets/blog-placeholder-3.jpg";
import blogPlaceholder3Holo from "../../assets/blog-placeholder-3-holo.jpg";
// Session covers will be imported from the content collections dynamically

// Get campaign stats
const allSessions = (await getCollection("journal")).sort((a, b) => {
  // Use session_start, session_date, or pubDate for sorting
  const dateA = a.data.session_start || a.data.session_date || a.data.pubDate;
  const dateB = b.data.session_start || b.data.session_date || b.data.pubDate;

  if (!dateA && !dateB) return 0;
  if (!dateA) return 1;
  if (!dateB) return -1;

  return dateB.valueOf() - dateA.valueOf();
});

const totalSessions = allSessions.length;
const latestSession = allSessions[0];

// Create a description from the first few main events if available
const getSessionDescription = (session: any) => {
  if (session.data.main_events && session.data.main_events.length > 0) {
    const firstEvent = session.data.main_events[0];
    return `${firstEvent}${session.data.main_events.length > 1 ? " and more adventures await..." : ""}`;
  }
  return "Our latest adventure in the Dessarin Valley unfolds with danger and discovery...";
};

// Get unique tags and locations
const allTags = new Set<string>();
const allLocations = new Set<string>();

allSessions.forEach((session) => {
  if (session.data.tags) {
    session.data.tags.forEach((tag: string) => allTags.add(tag));
  }
  if (session.data.locations_visited) {
    session.data.locations_visited.forEach((location: string) =>
      allLocations.add(location)
    );
  }
  if (session.data.primary_location) {
    allLocations.add(session.data.primary_location);
  }
});

// Find next upcoming session (look for sessions with future dates)
const today = new Date();
const upcomingSession = allSessions.find((session) => {
  const sessionDate = session.data.session_start || session.data.session_date;
  return sessionDate && sessionDate > today;
});

// Format date helper with time support
const formatDate = (date: Date) => {
  return date.toLocaleDateString("en-US", {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};

const formatDateTime = (date: Date) => {
  return date.toLocaleDateString("en-US", {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "numeric",
    minute: "2-digit",
  });
};

// Placeholder for Discord webhook data
const nextDiscordSession = {
  title: "Session 4",
  date: new Date("2025-06-30T19:00:00"),
  description: "Weakly game night!",
  players: ["Oliver", "Aldor", "Daijo", "Finn"],
};

const isDiscordSessionUpcoming = nextDiscordSession.date > today;

// Helper function to generate holo mask image path from cover image
const getHoloMaskPath = (coverImageSrc: string) => {
  if (!coverImageSrc) return blogPlaceholder1Holo.src;

  // Extract the path and filename
  const lastSlashIndex = coverImageSrc.lastIndexOf("/");
  const path = coverImageSrc.substring(0, lastSlashIndex + 1);
  const filename = coverImageSrc.substring(lastSlashIndex + 1);

  // Replace .jpg with -holo.jpg (or other extensions)
  const holoFilename = filename.replace(/\.([^.]+)$/, "-holo.$1");

  return path + holoFilename;
};
---

<section
  class="hero-section w-full min-h-[calc(100vh-4rem)] bg-surface sharp-corners flex flex-col"
>
  <!-- Hero Grid Layout -->
  <div class="grid grid-cols-1 lg:grid-cols-3 flex-1">
    <!-- Latest Journal Entry - Large Featured Card -->
    <div
      class="lg:col-span-2 relative overflow-hidden min-h-[calc(100vh-8rem)] holo-container"
      data-holo-image="latest-session"
      style={`--holo-mask: url('${
        latestSession?.data.cover_image
          ? getHoloMaskPath(latestSession.data.cover_image.src)
          : blogPlaceholder1Holo.src
      }');`}
    >
      <div
        class="absolute inset-0 bg-cover bg-center"
        style={`background-image: linear-gradient(135deg, rgba(28, 28, 39, 0.8) 0%, rgba(39, 39, 55, 0.6) 100%), url('${
          latestSession?.data.cover_image
            ? latestSession.data.cover_image.src
            : blogPlaceholder1.src
        }');`}
      >
      </div>

      <div class="relative h-full flex flex-col justify-end p-8 lg:p-12">
        <div
          class="bg-surface/90 backdrop-blur-sm p-6 lg:p-8 border-l-4 border-hero-red"
        >
          <div class="flex items-center gap-3 mb-4">
            <div class="w-10 h-10 bg-hero-red flex items-center justify-center">
              <span class="text-white font-bold text-lg">üìñ</span>
            </div>
            <span
              class="text-sm uppercase tracking-wider text-hero-red font-semibold"
              >Latest Adventure</span
            >
          </div>

          {
            latestSession && (
              <>
                <h2 class="text-3xl lg:text-4xl font-bold text-primary mb-4 leading-tight">
                  {latestSession.data.session_title ||
                    `Session ${latestSession.data.session_number}`}
                </h2>
                <p class="text-lg text-secondary mb-6 leading-relaxed">
                  {getSessionDescription(latestSession)}
                </p>
                <div class="flex flex-col gap-3 mb-6">
                  {latestSession.data.primary_location && (
                    <div class="flex items-center gap-2 text-muted">
                      <span class="w-4 h-4">üìç</span>
                      <span class="text-sm">
                        Primary Location: {latestSession.data.primary_location}
                      </span>
                    </div>
                  )}
                  {latestSession.data.session_length_hours && (
                    <div class="flex items-center gap-2 text-muted">
                      <span class="w-4 h-4">‚è±Ô∏è</span>
                      <span class="text-sm">
                        Session Length:{" "}
                        {latestSession.data.session_length_hours} hours
                      </span>
                    </div>
                  )}
                </div>
                <div class="flex items-center justify-between">
                  <div class="text-sm text-muted">
                    {latestSession.data.session_start
                      ? formatDate(latestSession.data.session_start)
                      : latestSession.data.session_date
                        ? formatDate(latestSession.data.session_date)
                        : "Recently"}
                  </div>
                  <HeroButton
                    variant="primary"
                    href={`/journal/${latestSession.id}`}
                    iconType="book"
                    client:load
                  >
                    Read Latest Session Report
                  </HeroButton>
                </div>
              </>
            )
          }
        </div>
      </div>
    </div>

    <!-- Sidebar with Next Session and Atlas -->
    <div
      class="lg:col-span-1 bg-surface-secondary border-l border-primary min-h-[calc(100vh-8rem)]"
    >
      <!-- Next Session Card -->
      <div
        class="h-1/2 border-b border-primary relative overflow-hidden holo-container"
        data-holo-image="blog-placeholder-2"
        style={`--holo-mask: url('${blogPlaceholder2Holo.src}');`}
      >
        <div
          class="absolute inset-0 bg-cover bg-center opacity-20"
          style={`background-image: url('${blogPlaceholder2.src}');`}
        >
        </div>

        <div class="relative h-full flex flex-col justify-center p-6 lg:p-8">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-8 h-8 bg-accent-600 flex items-center justify-center">
              <span class="text-white font-bold">üóìÔ∏è</span>
            </div>
            <span
              class="text-sm uppercase tracking-wider text-accent-600 font-semibold"
              >Next Session</span
            >
          </div>

          {
            isDiscordSessionUpcoming ? (
              <>
                <h3 class="text-xl font-bold text-primary mb-3 leading-tight">
                  {nextDiscordSession.title}
                </h3>
                <div class="space-y-3 mb-6">
                  <div class="flex items-center gap-2 text-secondary">
                    <span class="w-4 h-4">üìÖ</span>
                    <span class="text-sm">
                      {formatDate(nextDiscordSession.date)}
                    </span>
                  </div>
                  <div class="flex items-center gap-2 text-secondary">
                    <span class="w-4 h-4">üë•</span>
                    <span class="text-sm">
                      {nextDiscordSession.players.length} Adventurers
                    </span>
                  </div>
                </div>
                <p class="text-sm text-muted mb-4">
                  {nextDiscordSession.description}
                </p>
              </>
            ) : (
              <>
                <h3 class="text-xl font-bold text-primary mb-3">
                  Planning Next Adventure
                </h3>
                <p class="text-sm text-secondary mb-4">
                  Our next session is being scheduled. Join our Discord server
                  for real-time updates and coordination.
                </p>
                <div class="flex items-center gap-2 text-secondary mb-4">
                  <span class="w-4 h-4">üí¨</span>
                  <span class="text-sm">Check Discord for Updates</span>
                </div>
              </>
            )
          }

          <HeroButton
            variant="secondary"
            fullWidth
            size="md"
            iconType="beer"
            client:load
          >
            Visit the Inn
          </HeroButton>
        </div>
      </div>

      <!-- Atlas/Map Card -->
      <div
        class="h-1/2 relative overflow-hidden holo-container"
        data-holo-image="blog-placeholder-3"
        style={`--holo-mask: url('${blogPlaceholder3Holo.src}');`}
      >
        <div
          class="absolute inset-0 bg-cover bg-center opacity-30"
          style={`background-image: url('${blogPlaceholder3.src}');`}
        >
        </div>

        <div class="relative h-full flex flex-col justify-center p-6 lg:p-8">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-8 h-8 bg-gold-600 flex items-center justify-center">
              <span class="text-white font-bold">üó∫Ô∏è</span>
            </div>
            <span
              class="text-sm uppercase tracking-wider text-gold-600 font-semibold"
              >World Atlas</span
            >
          </div>

          <h3 class="text-xl font-bold text-primary mb-3 leading-tight">
            Explore the Dessarin Valley
          </h3>

          <p class="text-sm text-secondary mb-6">
            Discover locations, track your journey, and uncover the secrets of
            our campaign world through our interactive map.
          </p>

          <div class="space-y-2 mb-6">
            <div class="flex items-center gap-2 text-secondary">
              <span class="w-4 h-4">üè∞</span>
              <span class="text-sm">{allLocations.size} Locations Visited</span>
            </div>
            <div class="flex items-center gap-2 text-secondary">
              <span class="w-4 h-4">ÔøΩÔ∏è</span>
              <span class="text-sm">{totalSessions} Sessions Completed</span>
            </div>
            <div class="flex items-center gap-2 text-secondary">
              <span class="w-4 h-4">üîç</span>
              <span class="text-sm">{allTags.size} Story Tags</span>
            </div>
          </div>

          <HeroButton
            variant="primary"
            href="/atlas"
            fullWidth
            iconType="map"
            client:load
          >
            Explore Map
          </HeroButton>
        </div>
      </div>
    </div>
  </div>
</section>
