---
import { getCollection } from 'astro:content';

// Get active rumors from content collection
const allPartyContent = await getCollection('party');
const rumors = allPartyContent.filter(entry => 
  entry.data.type === 'rumor' && entry.data.status === 'active'
);

const getReliabilityIcon = (priority: string) => {
  switch (priority) {
    case "high":
    case "urgent":
      return "ðŸŸ¢";
    case "medium":
      return "ðŸŸ¡";
    case "low":
      return "ðŸ”´";
    default:
      return "ðŸŸ¡";
  }
};

const getUrgencyColor = (priority: string) => {
  switch (priority) {
    case "urgent":
      return "text-red-600";
    case "high":
      return "text-orange-600";
    case "medium":
      return "text-yellow-600";
    case "low":
      return "text-green-600";
    default:
      return "text-gray-600";
  }
};

const getStatusColor = (status: string) => {
  switch (status) {
    case 'active': return 'bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-200';
    case 'investigating': return 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200';
    case 'confirmed': return 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200';
    case 'debunked': return 'bg-gray-100 dark:bg-gray-900/30 text-gray-800 dark:text-gray-200';
    default: return 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200';
  }
};

const getBorderColor = (priority: string) => {
  switch (priority) {
    case 'urgent': return 'border-red-500';
    case 'high': return 'border-orange-500';
    case 'medium': return 'border-yellow-500';
    case 'low': return 'border-green-500';
    default: return 'border-purple-500';
  }
};

const getTagColor = (tag: string) => {
  const colors: Record<string, string> = {
    'magic': 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200',
    'mystery': 'bg-indigo-100 dark:bg-indigo-900/30 text-indigo-800 dark:text-indigo-200',
    'exploration': 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200',
    'urgent': 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200',
    'reward': 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200',
    'rescue': 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200',
    'caravan': 'bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-200',
    'sumber-hills': 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200'
  };
  return colors[tag.toLowerCase()] || 'bg-gray-100 dark:bg-gray-700/30 text-gray-800 dark:text-gray-200';
};
---

<div class="mb-6">
  <div class="flex items-center justify-between mb-4">
    <h2 class="text-xl md:text-2xl font-bold text-primary flex items-center">
      ðŸ‘‚ Rumors & Leads
    </h2>
    <div class="text-sm text-secondary">
      {rumors.length} Potential
    </div>
  </div>

  <div class="space-y-5">
    {
      rumors.map((rumor) => (
        <div
          class={`hero-card bg-surface-elevated rounded-xl shadow-card border-l-4 ${getBorderColor(rumor.data.priority || 'medium')} p-6 hover:shadow-card-hover transition-all duration-300 group relative overflow-hidden`}
        >
          <!-- Rumor background effect -->
          <div class="absolute top-0 right-0 w-24 h-24 opacity-10 group-hover:opacity-20 transition-opacity duration-300">
            <div class="w-full h-full bg-gradient-to-bl from-amber-500 to-orange-500 rounded-full"></div>
          </div>
          
          <div class="relative z-10">
            <div class="flex items-start justify-between mb-4">
              <div class="flex items-center gap-3">
                <span class="text-xl">
                  {getReliabilityIcon(rumor.data.priority || 'medium')}
                </span>
                <h3 class="text-lg font-bold text-primary group-hover:text-accent-400 transition-colors duration-200">
                  {rumor.data.title}
                </h3>
              </div>
              <span
                class={`${getStatusColor(rumor.data.status)} text-sm font-semibold px-3 py-1.5 rounded-full border shadow-sm`}
              >
                {rumor.data.status.charAt(0).toUpperCase() + rumor.data.status.slice(1)}
              </span>
            </div>

            <p class="text-secondary text-sm mb-4 leading-relaxed">
              {rumor.data.description}
            </p>

            <div class="flex flex-wrap items-center justify-between gap-3 mb-4">
              <div class="flex flex-wrap gap-2">
                {rumor.data.tags?.map((tag: string) => (
                  <span
                    class={`${getTagColor(tag)} text-xs font-semibold px-3 py-1 rounded-full border hover:scale-105 transition-transform duration-200`}
                  >
                    {tag.charAt(0).toUpperCase() + tag.slice(1)}
                  </span>
                ))}
              </div>
              <div class="flex items-center gap-2">
                <span class="text-xs text-muted">Priority:</span>
                <div
                  class={`text-sm font-bold ${getUrgencyColor(rumor.data.priority || 'medium')} bg-surface-secondary px-2 py-1 rounded-md border`}
                >
                  {(rumor.data.priority || 'medium').charAt(0).toUpperCase() + (rumor.data.priority || 'medium').slice(1)}
                </div>
              </div>
            </div>

            <div class="text-sm text-tertiary pt-3 border-t border-primary/20">
              <div class="flex flex-wrap gap-4">
                {rumor.data.reward && (
                  <div class="flex items-center gap-2">
                    <span class="text-gold-500">ðŸ’°</span>
                    <span>Reward: <span class="font-medium text-gold-500">{rumor.data.reward}</span></span>
                  </div>
                )}
                {rumor.data.questGiver && (
                  <div class="flex items-center gap-2">
                    <span>ðŸ‘¤</span>
                    <span>Contact: <span class="font-medium">{rumor.data.questGiver}</span></span>
                  </div>
                )}
                {rumor.data.startDate && (
                  <div class="flex items-center gap-2">
                    <span>ðŸ“…</span>
                    <span>First heard: <span class="font-medium">{rumor.data.startDate.toLocaleDateString()}</span></span>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>
